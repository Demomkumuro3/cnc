#!/usr/bin/env python3
"""
Send Command to Bot - G·ª≠i l·ªánh ƒë·∫øn Bot t·ª´ command line
"""

import requests
import json
import sys
import time
from datetime import datetime

class C2CommandSender:
    def __init__(self, server_url="http://192.168.1.5:5000"):
        self.server_url = server_url.rstrip('/')
        self.session = requests.Session()
        self.session.timeout = 30
    
    def get_system_status(self):
        """L·∫•y tr·∫°ng th√°i h·ªá th·ªëng"""
        try:
            response = self.session.get(f"{self.server_url}/api/system-status")
            if response.status_code == 200:
                return response.json()
            else:
                return None
        except Exception as e:
            print(f"‚ùå L·ªói khi l·∫•y tr·∫°ng th√°i: {e}")
            return None
    
    def get_bots_list(self):
        """L·∫•y danh s√°ch bot"""
        try:
            response = self.session.get(f"{self.server_url}/api/bots")
            if response.status_code == 200:
                return response.json()
            else:
                return None
        except Exception as e:
            print(f"‚ùå L·ªói khi l·∫•y danh s√°ch bot: {e}")
            return None
    
    def send_command_to_all(self, command):
        """G·ª≠i l·ªánh ƒë·∫øn t·∫•t c·∫£ bot"""
        try:
            print(f"üì° G·ª≠i l·ªánh ƒë·∫øn t·∫•t c·∫£ bot: {command}")
            
            data = {'command': command}
            response = self.session.post(f"{self.server_url}/bot/command_all", json=data)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('status') == 'success':
                    print(f"‚úÖ L·ªánh ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!")
                    print(f"üÜî Command ID: {result.get('command_id', 'N/A')}")
                    return True
                else:
                    print(f"‚ùå L·ªói: {result.get('message', 'Unknown error')}")
                    return False
            else:
                print(f"‚ùå HTTP Error: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå L·ªói khi g·ª≠i l·ªánh: {e}")
            return False
    
    def send_command_to_bot(self, bot_id, command):
        """G·ª≠i l·ªánh ƒë·∫øn bot c·ª• th·ªÉ"""
        try:
            print(f"üì° G·ª≠i l·ªánh ƒë·∫øn bot {bot_id}: {command}")
            
            data = {
                'bot_id': bot_id,
                'command': command
            }
            response = self.session.post(f"{self.server_url}/bot/command", json=data)
            
            if response.status_code == 200:
                result = response.json()
                if result.get('status') == 'success':
                    print(f"‚úÖ L·ªánh ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!")
                    print(f"üÜî Command ID: {result.get('command_id', 'N/A')}")
                    return True
                else:
                    print(f"‚ùå L·ªói: {result.get('message', 'Unknown error')}")
                    return False
            else:
                print(f"‚ùå HTTP Error: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå L·ªói khi g·ª≠i l·ªánh: {e}")
            return False
    
    def show_status(self):
        """Hi·ªÉn th·ªã tr·∫°ng th√°i h·ªá th·ªëng"""
        print("üìä Tr·∫°ng th√°i h·ªá th·ªëng:")
        print("=" * 40)
        
        status = self.get_system_status()
        if status and status.get('status') == 'success':
            data = status.get('data', {})
            print(f"üñ•Ô∏è  Server: {data.get('server_status', 'Unknown')}")
            print(f"ü§ñ Bot Online: {data.get('online_bots', 0)}")
            print(f"üìù T·ªïng l·ªánh: {data.get('total_commands', 0)}")
            print(f"‚úÖ T·ª∑ l·ªá th√†nh c√¥ng: {data.get('success_rate', 0)}%")
            print(f"‚ö° CPU Usage: {data.get('cpu_usage', 0)}%")
            print(f"üíæ Memory Usage: {data.get('memory_usage', 0)}%")
        else:
            print("‚ùå Kh√¥ng th·ªÉ l·∫•y tr·∫°ng th√°i h·ªá th·ªëng")
    
    def show_bots(self):
        """Hi·ªÉn th·ªã danh s√°ch bot"""
        print("\nü§ñ Danh s√°ch Bot:")
        print("=" * 40)
        
        bots = self.get_bots_list()
        if bots and bots.get('status') == 'success':
            bot_list = bots.get('bots', [])
            if bot_list:
                for i, bot in enumerate(bot_list, 1):
                    print(f"{i}. ID: {bot.get('bot_id', 'N/A')}")
                    print(f"   T√™n: {bot.get('name', 'N/A')}")
                    print(f"   OS: {bot.get('os_info', 'N/A')}")
                    print(f"   Tr·∫°ng th√°i: {bot.get('status', 'N/A')}")
                    print(f"   Health: {bot.get('health_score', 'N/A')}%")
                    print(f"   Cu·ªëi c√πng: {bot.get('last_seen', 'N/A')}")
                    print()
            else:
                print("‚ùå Kh√¥ng c√≥ bot n√†o online")
        else:
            print("‚ùå Kh√¥ng th·ªÉ l·∫•y danh s√°ch bot")
    
    def interactive_mode(self):
        """Ch·∫ø ƒë·ªô t∆∞∆°ng t√°c"""
        print("üöÄ C2 Server Command Interface")
        print("=" * 40)
        print("üí° S·ª≠ d·ª•ng 'help' ƒë·ªÉ xem c√°c l·ªánh c√≥ s·∫µn")
        print("üí° S·ª≠ d·ª•ng 'quit' ƒë·ªÉ tho√°t")
        print()
        
        while True:
            try:
                command = input("ü§ñ C2> ").strip()
                
                if not command:
                    continue
                
                if command.lower() in ['quit', 'exit', 'q']:
                    print("üëã T·∫°m bi·ªát!")
                    break
                
                elif command.lower() == 'help':
                    self.show_help()
                
                elif command.lower() == 'status':
                    self.show_status()
                
                elif command.lower() == 'bots':
                    self.show_bots()
                
                elif command.lower() == 'send-all':
                    cmd = input("üìù Nh·∫≠p l·ªánh c·∫ßn g·ª≠i ƒë·∫øn t·∫•t c·∫£ bot: ").strip()
                    if cmd:
                        self.send_command_to_all(cmd)
                    else:
                        print("‚ùå L·ªánh kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng")
                
                elif command.lower() == 'send-bot':
                    self.show_bots()
                    bot_id = input("üÜî Nh·∫≠p Bot ID: ").strip()
                    if bot_id:
                        cmd = input("üìù Nh·∫≠p l·ªánh c·∫ßn g·ª≠i: ").strip()
                        if cmd:
                            self.send_command_to_bot(bot_id, cmd)
                        else:
                            print("‚ùå L·ªánh kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng")
                    else:
                        print("‚ùå Bot ID kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng")
                
                elif command.lower() == 'clear':
                    import os
                    os.system('cls' if os.name == 'nt' else 'clear')
                    print("üöÄ C2 Server Command Interface")
                    print("=" * 40)
                
                else:
                    print("‚ùå L·ªánh kh√¥ng h·ª£p l·ªá. S·ª≠ d·ª•ng 'help' ƒë·ªÉ xem c√°c l·ªánh c√≥ s·∫µn")
                
                print()
                
            except KeyboardInterrupt:
                print("\nüëã T·∫°m bi·ªát!")
                break
            except Exception as e:
                print(f"‚ùå L·ªói: {e}")
    
    def show_help(self):
        """Hi·ªÉn th·ªã tr·ª£ gi√∫p"""
        print("\nüìñ Tr·ª£ gi√∫p - C√°c l·ªánh c√≥ s·∫µn:")
        print("=" * 40)
        print("help          - Hi·ªÉn th·ªã tr·ª£ gi√∫p n√†y")
        print("status        - Hi·ªÉn th·ªã tr·∫°ng th√°i h·ªá th·ªëng")
        print("bots          - Hi·ªÉn th·ªã danh s√°ch bot")
        print("send-all      - G·ª≠i l·ªánh ƒë·∫øn t·∫•t c·∫£ bot")
        print("send-bot      - G·ª≠i l·ªánh ƒë·∫øn bot c·ª• th·ªÉ")
        print("clear         - X√≥a m√†n h√¨nh")
        print("quit/exit/q   - Tho√°t ch∆∞∆°ng tr√¨nh")
        print()

def main():
    if len(sys.argv) < 2:
        # Interactive mode
        sender = C2CommandSender()
        sender.interactive_mode()
    else:
        # Command line mode
        if len(sys.argv) < 3:
            print("Usage:")
            print("  python send_command.py                    # Interactive mode")
            print("  python send_command.py all <command>      # Send to all bots")
            print("  python send_command.py bot <bot_id> <command>  # Send to specific bot")
            sys.exit(1)
        
        sender = C2CommandSender()
        
        if sys.argv[1] == 'all':
            command = ' '.join(sys.argv[2:])
            sender.send_command_to_all(command)
        
        elif sys.argv[1] == 'bot':
            if len(sys.argv) < 4:
                print("‚ùå Thi·∫øu tham s·ªë: python send_command.py bot <bot_id> <command>")
                sys.exit(1)
            bot_id = sys.argv[2]
            command = ' '.join(sys.argv[3:])
            sender.send_command_to_bot(bot_id, command)
        
        else:
            print("‚ùå L·ªánh kh√¥ng h·ª£p l·ªá. S·ª≠ d·ª•ng 'all' ho·∫∑c 'bot'")

if __name__ == "__main__":
    main()
